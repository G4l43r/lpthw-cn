联系 4: 变量和名称
******************

你学会了使用``print``来打印东西出来, 也学会了使用Python做算术. 下一步是学习
变量了. 编程中所指的变量不过是某个东西的名字, 当你在编程的时候, 你可以使用
这样的名字, 而不是这个东西本身. 程序员通过使用这样的名字, 可以让程序读起来更
像自然的英语, 而且程序员的记性一般都不怎么地, 如果他们写软件的时候没有给里边
的东西取些好名字, 下次回来重读以前的代码时他们就会迷失掉了.

如果你在这个联系中卡在了某个地方, 记得使用你前面学过的一些观察细节和发现不同
的小技巧.:

1. 在你写的每一行代码前面写一个注解, 提醒自己这一行做了什么.
2. 倒着往回读你写的``.py``文件.
3. 朗读你写的``.py``文件, 包含其中的每一个符号.


.. literalinclude:: ex/ex4.py
    :linenos:

.. 提示::

    ``_``的名称是下划线, 例如在``space_in_a_car``这个词中间.  你要自己学会怎样
	打出这个字符. 它的用处你也许还不知道, 我们会在变量中经常把这个字符当作假想
	的空格符号来使用它.

你应该看到的结果
================


.. literalinclude:: ex/ex4.txt


奖励练习
========

我第一次写这段代码时我弄错了一个地方, python告诉我这样一些信息:

.. literalinclude:: ex/ex4.err

用你自己的话解释一些这个错误, 你需要解释为什么会发生这样的错误, 并且使用行号来
解释.

这里有更多的奖励联系:

1. 解释为什么程序里要用 4.0 而不是 4.  
2. 记住 4.0 是一个浮点数, 确认自己理解浮点数的意义.
3. 在每一个变量赋值的前一行添加一个注解.
4. 确认自己知道``=``的名称(赋值), 而且它的意义是给东西取名. 
5. 你应该还知道``_``是一个下划线字符.
6. 试着使用``python``作为一个计算器, 和你以前做过的练习一样, 不过要使用变量来做
计算, ``i``, ``x``, 和 ``j``是一些常用的变量名称.

